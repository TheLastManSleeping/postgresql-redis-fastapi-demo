version: '3.8'

services:
  postgres_db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis_cache:
    image: redis:6.2-alpine
    container_name: redis_cache
    ports:
      - "6379:6379"

  downloader:
    image: alpine/curl:latest
    container_name: downloader
    volumes:
      - ./scripts/download_data.sh:/download.sh
      - data_volume:/data
    working_dir: /data
    command: sh /download.sh

  db_init:
    build:
      context: .
      dockerfile: fastapi_app/Dockerfile
    container_name: db_init
    command: python /code/init_db.py
    environment:
      DATABASE_URL: "postgresql://user:password@postgres_db/mydatabase"
    volumes:
      - data_volume:/data
    depends_on:
      postgres_db:
        condition: service_healthy
      downloader:
        condition: service_completed_successfully

  fastapi_app:
    build:
      context: .
      dockerfile: fastapi_app/Dockerfile
    container_name: fastapi_app
    ports:
      - "8000:80"
    environment:
      DATABASE_URL: "postgresql://user:password@postgres_db/mydatabase"
    depends_on:
      db_init:
        condition: service_completed_successfully
      redis_cache:
        condition: service_started

volumes:
  postgres_data:
  data_volume: